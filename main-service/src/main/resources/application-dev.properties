#--- dev profile ---#
server.port=6868
server.servlet.context-path=/api/v1
# Datasource Config
spring.datasource.url=jdbc:postgresql://localhost:5432/resellingFlowerDev
spring.datasource.username=postgres
spring.datasource.password=123


spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# JPA Config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Email Config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=contact.isolutions.top@gmail.com
spring.mail.password=kfzw ogke lfdk vnnx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Thymeleaf template configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.mail.default-encoding=UTF-8
spring.main.allow-bean-definition-overriding=true

#Kafka Config
#kafka server url
#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=isolutions.top:9092
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

#0: no wait for kafka response
#1: leader write success, not wait for follower
#-1: wait for all leader, and replication
spring.kafka.producer.acks=-1
spring.kafka.producer.retries=1

#prevent duplicate send
spring.kafka.producer.properties.[enable.idempotence]=true
spring.kafka.producer.properties.[max.in.flight.requests.per.connection]=5

#Public api backend
public.api.url={PUBLIC_API_URL}

#Redis
#spring.data.redis.database=0
#spring.data.redis.host=localhost
#spring.data.redis.port=6379
##spring.redis.password=mypasshttp://47.128.244.9:8888/
#spring.data.redis.timeout=3600

#Login Google
spring.security.oauth2.client.registration.google.client-id=467879247851-l519h15u5tcv3iucjuan6534cr43j7ba.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

#Payos
payos.client-id=0186f1ce-95f3-4262-b773-ce77d86d8263
payos.api-key=ca1a1375-594f-446d-b2df-cf668a952f0d
payos.checksum-key=cf9e6ca47e79bb9303f13c4028da18757cb373f75e5e3f1ec8c60a972d608f6a

#Cloud config
cloud.aws.using.s3=false
cloud.aws.using.cloudwatch=false

cloud.aws.bucket.name=${AWS_BUCKET_NAME}
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_PRIVATE_KEY}
cloud.aws.region.static=${AWS_REGION}
