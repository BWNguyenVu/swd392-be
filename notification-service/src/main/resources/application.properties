spring.application.name=notification-service
server.port=8082

# Datasource Config
spring.datasource.url=${CONNECTION_STRING_NOTIFICATION_DEV}
spring.datasource.username=${NOTIFICATION_DATABASE_USERNAME}
spring.datasource.password=${NOTIFICATION_DATABASE_PASSWORD}

# Email Config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Thymeleaf template configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.mail.default-encoding=UTF-8
spring.main.allow-bean-definition-overriding=true

# Kafka Config
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER}

# Producer Configuration

spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=-1
spring.kafka.producer.retries=1

## Consumer Configuration
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.value.default.type=com.ojt.notification_service.dto.account.AccountDTO
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Public API backend
public.api.url=${PUBLIC_API}
